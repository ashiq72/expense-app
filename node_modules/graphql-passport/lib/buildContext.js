"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _passport = _interopRequireDefault(require("passport"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var promisifiedAuthenticate = function promisifiedAuthenticate(req, res, name, options) {
  return new Promise(function (resolve, reject) {
    return _passport["default"].authenticate(name, options, function (err, user, info) {
      if (err) reject(err);else resolve({
        user: user,
        info: info
      });
    })(req, res);
  });
};

var promisifiedLogin = function promisifiedLogin(req, user, options) {
  return new Promise(function (resolve, reject) {
    return req.login(user, options, function (err) {
      if (err) reject(err);else resolve();
    });
  });
};

var buildCommonContext = function buildCommonContext(req, additionalContext) {
  return Object.assign({
    isAuthenticated: function isAuthenticated() {
      return req.isAuthenticated();
    },
    isUnauthenticated: function isUnauthenticated() {
      return req.isUnauthenticated();
    },
    getUser: function getUser() {
      return req.user;
    },
    req: req
  }, additionalContext);
};
/**
 * @typedef {Object} Context
 * @property {function(): boolean} isAuthenticated
 * @property {function(): boolean} isUnauthenticated
 * @property {function(): object} getUser
 * @property {function(string, object): void} authenticate accepts strategy name and options
 * @property {function(string, object): void} login accepts strategy name and options
 * @property {function(): void} logout
 * @property {object} req the provided request object
 * @property {object} res the provided response object
 */

/**
 * Creates a GraphQL context which allows access to the Passport user object and functions
 *
 * @param {object} contextParams
 * @param {object} [contextParams.req] request object for queries and mutations
 * @param {object} [contextParams.res] response object for queries and mutations
 * @param {object} [contextParams.connection] connection object for subscriptions
 * @returns {Context} context containing Passport user and functions
 */


var buildContext = function buildContext(contextParams) {
  var req = contextParams.req,
      res = contextParams.res,
      connection = contextParams.connection,
      payload = contextParams.payload,
      additionalContext = _objectWithoutProperties(contextParams, ["req", "res", "connection", "payload"]);

  if (connection) {
    return buildCommonContext(connection.context.req, additionalContext);
  }

  return Object.assign(buildCommonContext(req, additionalContext), {
    authenticate: function authenticate(name, options) {
      return promisifiedAuthenticate(req, res, name, options);
    },
    login: function login(user, options) {
      return promisifiedLogin(req, user, options);
    },
    logout: function logout() {
      return req.logout();
    },
    res: res
  });
};

var _default = buildContext;
exports["default"] = _default;